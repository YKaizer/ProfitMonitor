from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from utils.keyboard import get_info_keyboard, get_funcs_keyboard
from database.db import get_user_settings
from handlers.notifications import get_notifications_main_keyboard
from aiogram.types import FSInputFile

router = Router()

@router.message(Command("start"))
async def start_command(message: Message):
    # Ensure the user exists in the database so that broadcasts reach them
    await get_user_settings(message.from_user.id)
    photo = FSInputFile("welcome_monitor.png")
    await message.answer_photo(
        photo=photo,
        caption="üü£ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ *ProfitNodes Monitor*!\n\n"
        "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è - –≤–≤–µ–¥–∏—Ç–µ /help\n"
        "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å - –≤–≤–µ–¥–∏—Ç–µ /info\n\n"
        "‚öôÔ∏è –ú–æ–Ω–∏—Ç–æ—Ä –≤ –±–µ—Ç–∞-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏\n"
        "–í –¥–∞–ª—å–Ω–µ–π—à–µ–º –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª",
        parse_mode="Markdown"
    )

@router.message(Command("help"))
async def help_command(message: Message):
    text = (
        "üåê –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –∏–∑—É—á–∏—Ç–µ —ç—Ç—É [—Å—Ç–∞—Ç—å—é](https://www.notion.so/1e1a0f0bff2d809d8e5bf79ce2f21a75) –∏ [–≤–∏–¥–µ–æ](https://www.youtube.com/watch?v=y4x8mD2uGQI)\n\n\n"
        "‚ÑπÔ∏è *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:*\n\n"
        "/info ‚Äî –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n"
        "/notifications ‚Äî –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
        "/funcs ‚Äî —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –æ–¥–∏–Ω –∫–ª–∏–∫ \n\n"
        "/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/help ‚Äî —Å–ø—Ä–∞–≤–∫–∞ –∏ –ø–æ–º–æ—â—å\n\n"
        "üí¨ –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—à–∏—Ç–µ –≤ –Ω–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç"
    )
    await message.answer(text, parse_mode="Markdown", disable_web_page_preview=True)

@router.message(Command("info"))
async def info_command(message: Message):
    await message.answer("üñ•Ô∏è –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", reply_markup=get_info_keyboard())

@router.callback_query(F.data == "info")
async def info_callback(callback: CallbackQuery):
    await callback.message.delete()
    await callback.answer()
    await callback.message.answer("üñ•Ô∏è –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è", reply_markup=get_info_keyboard())

@router.message(Command("notifications"))
async def notifications_command(message: Message):
    # –∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é
    settings = await get_user_settings(message.from_user.id)
    await message.answer(
        "üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
        # –æ—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Ç—Ä–µ–±—É–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        reply_markup=get_notifications_main_keyboard(settings),
    )

@router.message(Command("funcs"))
async def funcs_command(message: Message):
    await message.answer("üöÄ –§—É–Ω–∫—Ü–∏–∏ –≤ –æ–¥–∏–Ω –∫–ª–∏–∫", reply_markup=get_funcs_keyboard())
